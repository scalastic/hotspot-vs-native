---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hasher
  namespace: demo-app
  labels:
    app: hasher
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hasher
  template:
    metadata:
      name: hasher
      labels:
        app: hasher
    spec:
      containers:
        - image: hasher-native:0.0.2-SNAPSHOT
          imagePullPolicy: IfNotPresent
          name: hasher
          ports:
            - containerPort: 8080
              name: http-hasher
              protocol: TCP
          resources:
            limits:
              memory: 75Mi
              cpu: 100m
            requests:
              memory: 50Mi
              cpu: 50m
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
---
apiVersion: v1
kind: Service
metadata:
  name: hasher
  namespace: demo-app
  labels:
    app: hasher
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: http
    prometheus.io/path: /actuator/prometheus
    prometheus.io/port: '8080'
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: http-hasher
  selector:
    app: hasher
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rng
  namespace: demo-app
  labels:
    app: rng
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rng
  template:
    metadata:
      name: rng
      labels:
        app: rng
    spec:
      containers:
        - image: rng-hotspot:0.0.2-SNAPSHOT
          imagePullPolicy: IfNotPresent
          name: rng
          ports:
            - containerPort: 8080
              name: http-rng
              protocol: TCP
          resources:
            limits:
              memory: 500Mi
              cpu: 100m
            requests:
              memory: 300Mi
              cpu: 50m
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
---
apiVersion: v1
kind: Service
metadata:
  name: rng
  namespace: demo-app
  labels:
    app: rng
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: http
    prometheus.io/path: /actuator/prometheus
    prometheus.io/port: '8080'
spec:
  ports:
    - port: 8081
      protocol: TCP
      targetPort: http-rng
  selector:
    app: rng
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: demo-app
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: redis:6.2.1
          name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: demo-app
  labels:
    app: redis
spec:
  ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
    app: redis
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webui
  name: webui
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
    spec:
      containers:
        - image: webui-regular:0.0.1
          name: webui
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: webui
  name: webui
  namespace: demo-app
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: webui
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: worker
  name: worker
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
        - image: worker-regular:0.0.1
          name: worker